{"ast":null,"code":"var _jsxFileName = \"/home/tb2/youtube/myprojects/tweetme/tweetme-web/src/tweets/components.js\";\nimport React, { useState } from 'react';\nimport { TweetList } from './list';\nimport { apiTweetCreate } from './lookup';\n\nfunction TweetCreate(props) {\n  const textAreaRef = React.createRef();\n  const {\n    didTweet\n  } = props;\n\n  const handleBackendUpdate = (response, status) => {\n    if (status === 201) {\n      didTweet(response);\n    } else {\n      console.log(response);\n      alert(\"An error occured please try again\");\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const newVal = textAreaRef.current.value; //backend api request\n\n    apiTweetCreate(newVal, handleBackendUpdate);\n    textAreaRef.current.value = '';\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: props.className,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    ref: textAreaRef,\n    required: true,\n    className: \"form-control\",\n    name: \"tweet\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary my-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  }, \"Tweet\")));\n}\n\nexport function TweetComponent(props) {\n  const [newTweets, setNewTweets] = useState([]);\n  const canTweet = props.canTweet === \"false\" ? false : true;\n\n  const handleNewTweet = newTweet => {\n    let tempNewTweets = [...newTweets];\n    tempNewTweets.unshift(newTweets);\n    setNewTweets(tempNewTweets);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: props.className,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 12\n    }\n  }, canTweet === true && /*#__PURE__*/React.createElement(TweetCreate, {\n    didTweet: handleNewTweet,\n    className: \"col-12 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 31\n    }\n  }), /*#__PURE__*/React.createElement(TweetList, Object.assign({\n    newTweets: newTweets\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/home/tb2/youtube/myprojects/tweetme/tweetme-web/src/tweets/components.js"],"names":["React","useState","TweetList","apiTweetCreate","TweetCreate","props","textAreaRef","createRef","didTweet","handleBackendUpdate","response","status","console","log","alert","handleSubmit","event","preventDefault","newVal","current","value","className","TweetComponent","newTweets","setNewTweets","canTweet","handleNewTweet","newTweet","tempNewTweets","unshift"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA+B,OAA/B;AACA,SAAQC,SAAR,QAAwB,QAAxB;AACA,SAAQC,cAAR,QAA6B,UAA7B;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA2B;AACvB,QAAMC,WAAW,GAAGN,KAAK,CAACO,SAAN,EAApB;AACA,QAAM;AAACC,IAAAA;AAAD,MAAaH,KAAnB;;AACA,QAAMI,mBAAmB,GAAG,CAACC,QAAD,EAAWC,MAAX,KAAsB;AAC9C,QAAIA,MAAM,KAAK,GAAf,EAAoB;AAChBH,MAAAA,QAAQ,CAACE,QAAD,CAAR;AACH,KAFD,MAEO;AACHE,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACAI,MAAAA,KAAK,CAAC,mCAAD,CAAL;AACH;AACJ,GAPD;;AAQA,QAAMC,YAAY,GAAIC,KAAD,IAAW;AAC5BA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAMC,MAAM,GAAGZ,WAAW,CAACa,OAAZ,CAAoBC,KAAnC,CAF4B,CAG5B;;AACAjB,IAAAA,cAAc,CAACe,MAAD,EAAST,mBAAT,CAAd;AACAH,IAAAA,WAAW,CAACa,OAAZ,CAAoBC,KAApB,GAA4B,EAA5B;AACH,GAND;;AAOA,sBAAO;AAAK,IAAA,SAAS,EAAEf,KAAK,CAACgB,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAM,IAAA,QAAQ,EAAEN,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,GAAG,EAAET,WADT;AAEI,IAAA,QAAQ,EAAE,IAFd;AAGI,IAAA,SAAS,EAAC,cAHd;AAII,IAAA,IAAI,EAAC,OAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAMI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,sBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aANJ,CADD,CAAP;AAUH;;AAED,OAAO,SAASgB,cAAT,CAAwBjB,KAAxB,EAA+B;AAClC,QAAM,CAACkB,SAAD,EAAYC,YAAZ,IAA4BvB,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAMwB,QAAQ,GAAGpB,KAAK,CAACoB,QAAN,KAAmB,OAAnB,GAA6B,KAA7B,GAAqC,IAAtD;;AACA,QAAMC,cAAc,GAAIC,QAAD,IAAc;AACjC,QAAIC,aAAa,GAAG,CAAC,GAAGL,SAAJ,CAApB;AACAK,IAAAA,aAAa,CAACC,OAAd,CAAsBN,SAAtB;AACAC,IAAAA,YAAY,CAACI,aAAD,CAAZ;AACH,GAJD;;AAKA,sBAAO;AAAK,IAAA,SAAS,EAAEvB,KAAK,CAACgB,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACFI,QAAQ,KAAK,IAAb,iBAAqB,oBAAC,WAAD;AAAa,IAAA,QAAQ,EAAIC,cAAzB;AAAyC,IAAA,SAAS,EAAC,aAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADnB,eAEH,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAEH;AAAtB,KAAqClB,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFG,CAAP;AAIH","sourcesContent":["import React , {useState} from 'react'\nimport {TweetList} from './list'\nimport {apiTweetCreate} from './lookup'\n\nfunction TweetCreate(props){\n    const textAreaRef = React.createRef()\n    const {didTweet} = props\n    const handleBackendUpdate = (response, status) => {\n        if (status === 201) {\n            didTweet(response)\n        } else {\n            console.log(response)\n            alert(\"An error occured please try again\")\n        }\n    }\n    const handleSubmit = (event) => {\n        event.preventDefault()\n        const newVal = textAreaRef.current.value\n        //backend api request\n        apiTweetCreate(newVal, handleBackendUpdate)\n        textAreaRef.current.value = ''\n    }\n    return <div className={props.className}>\n            <form onSubmit={handleSubmit}>\n                <textarea\n                    ref={textAreaRef}\n                    required={true}\n                    className='form-control'\n                    name='tweet'></textarea>\n                <button type='submit' className='btn btn-primary my-3'>Tweet</button>\n            </form>\n        </div>\n}\n\nexport function TweetComponent(props) {\n    const [newTweets, setNewTweets] = useState([])\n    const canTweet = props.canTweet === \"false\" ? false : true\n    const handleNewTweet = (newTweet) => {\n        let tempNewTweets = [...newTweets]\n        tempNewTweets.unshift(newTweets)\n        setNewTweets(tempNewTweets)\n    }\n    return <div className={props.className}>\n        {canTweet === true && <TweetCreate didTweet = {handleNewTweet} className='col-12 mb-3'/>}\n        <TweetList newTweets={newTweets} {...props}/>\n    </div>\n}"]},"metadata":{},"sourceType":"module"}