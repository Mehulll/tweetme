{"ast":null,"code":"var _jsxFileName = \"/home/tb2/youtube/myprojects/tweetme/tweetme-web/src/tweets/components.js\";\nimport React, { useEffect, useState } from 'react';\nimport { apiTweetAction, apiTweetCreate, apiTweetList } from './lookup';\nexport function TweetComponent(props) {\n  const textAreaRef = React.createRef();\n  const [newTweets, setNewTweets] = useState([]);\n\n  const handleBackendUpdate = (response, status) => {\n    // backend api response handler\n    let tempNewTweets = [...newTweets];\n\n    if (status === 201) {\n      tempNewTweets.unshift(response);\n      setNewTweets(tempNewTweets);\n    } else {\n      console.log(response);\n      alert(\"An error occured please try again\");\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const newVal = textAreaRef.current.value; //backend api request\n\n    apiTweetCreate(newVal, handleBackendUpdate);\n    textAreaRef.current.value = '';\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: props.className,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    ref: textAreaRef,\n    required: true,\n    className: \"form-control\",\n    name: \"tweet\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary my-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, \"Tweet\"))), /*#__PURE__*/React.createElement(TweetList, {\n    newTweets: newTweets,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }));\n}\nexport function TweetList(props) {\n  const [tweetsInit, setTweetsInit] = useState([]);\n  const [tweets, setTweets] = useState([]);\n  const [tweetsDidSet, setTweetsDidSet] = useState(false);\n  useEffect(() => {\n    const final = [...props.newTweets].concat(tweetsInit);\n\n    if (final.length !== tweets.length) {\n      setTweets(final);\n    }\n  }, [props.newTweets, tweets, tweetsInit]);\n  useEffect(() => {\n    if (tweetsDidSet === false) {\n      const handleTweetListLookup = (response, status) => {\n        if (status === 200) {\n          setTweetsInit(response);\n          setTweetsDidSet(true);\n        } else {\n          alert(\"There was an error\");\n        }\n      };\n\n      apiTweetList(\"\", handleTweetListLookup);\n    }\n  }, [tweetsInit, tweetsDidSet, setTweetsDidSet]);\n\n  const handleDidRetweet = newTweet => {\n    const updateTweetsInit = [...tweetsInit];\n    updateTweetsInit.unshift(newTweet);\n    setTweetsInit(updateTweetsInit);\n    const updateFinalTweets = [...tweets];\n    updateFinalTweets.unshift(tweets);\n    setTweets(updateFinalTweets);\n  };\n\n  return tweets.map((item, index) => {\n    return /*#__PURE__*/React.createElement(Tweet, {\n      tweet: item,\n      didRetweet: handleDidRetweet,\n      className: \"my-5 py-5 border bg-white text-dark\",\n      key: `${index}-{item.id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 16\n      }\n    });\n  });\n}\nexport function ActionBtn(props) {\n  const {\n    tweet,\n    action,\n    didPerformAction\n  } = props;\n  const likes = tweet.likes ? tweet.likes : 0;\n  const className = props.className ? props.className : 'btn btn-primary btn-sm';\n  const actionDisplay = action.display ? action.display : 'Action';\n\n  const handleActionBackendEvent = (response, status) => {\n    if ((status === 200 || status === 201) && didPerformAction) {\n      didPerformAction(response, status);\n    }\n  };\n\n  const handleClick = event => {\n    event.preventDefault();\n    apiTweetAction(tweet.id, action.type, handleActionBackendEvent);\n  };\n\n  const display = action.type === 'like' ? `${likes} ${actionDisplay}` : actionDisplay;\n  return /*#__PURE__*/React.createElement(\"button\", {\n    className: className,\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 12\n    }\n  }, display);\n}\nexport function ParentTweet(props) {\n  const {\n    tweet\n  } = props;\n  return tweet.parent ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-11 mx-auto p-3 border rounded\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"mb-0 text-muted small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 19\n    }\n  }, \"Retweet\"), /*#__PURE__*/React.createElement(Tweet, {\n    hideActions: true,\n    className: '',\n    tweet: tweet.parent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 19\n    }\n  }))) : null;\n}\nexport function Tweet(props) {\n  const {\n    tweet,\n    didRetweet,\n    hideActions\n  } = props;\n  const [actionTweet, setActionTweet] = useState(props.tweet ? props.tweet : null);\n  const className = props.className ? props.className : 'col-10 mx-auto col-md-6';\n\n  const handlePerformAction = (newActionTweet, status) => {\n    if (status === 200) {\n      setActionTweet(newActionTweet);\n    } else if (status === 201) {\n      didRetweet(newActionTweet);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: className,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  }, tweet.id, \" - \", tweet.content), /*#__PURE__*/React.createElement(ParentTweet, {\n    tweet: tweet,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 15\n    }\n  })), actionTweet && hideActions !== true && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn btn-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 51\n    }\n  }, /*#__PURE__*/React.createElement(ActionBtn, {\n    tweet: actionTweet,\n    didPerformAction: handlePerformAction,\n    action: {\n      type: \"like\",\n      display: \"Likes\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(ActionBtn, {\n    tweet: actionTweet,\n    didPerformAction: handlePerformAction,\n    action: {\n      type: \"unlike\",\n      display: \"Unlike\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(ActionBtn, {\n    tweet: actionTweet,\n    didPerformAction: handlePerformAction,\n    action: {\n      type: \"retweet\",\n      display: \"\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }\n  })));\n}","map":{"version":3,"sources":["/home/tb2/youtube/myprojects/tweetme/tweetme-web/src/tweets/components.js"],"names":["React","useEffect","useState","apiTweetAction","apiTweetCreate","apiTweetList","TweetComponent","props","textAreaRef","createRef","newTweets","setNewTweets","handleBackendUpdate","response","status","tempNewTweets","unshift","console","log","alert","handleSubmit","event","preventDefault","newVal","current","value","className","TweetList","tweetsInit","setTweetsInit","tweets","setTweets","tweetsDidSet","setTweetsDidSet","final","concat","length","handleTweetListLookup","handleDidRetweet","newTweet","updateTweetsInit","updateFinalTweets","map","item","index","ActionBtn","tweet","action","didPerformAction","likes","actionDisplay","display","handleActionBackendEvent","handleClick","id","type","ParentTweet","parent","Tweet","didRetweet","hideActions","actionTweet","setActionTweet","handlePerformAction","newActionTweet","content"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\n\nimport {\napiTweetAction,\napiTweetCreate, \napiTweetList} from './lookup'\n\nexport function TweetComponent(props) {\n    const textAreaRef = React.createRef()\n    const [newTweets, setNewTweets] = useState([])\n    const handleBackendUpdate = (response, status) => {\n      // backend api response handler\n        let tempNewTweets = [...newTweets]\n        if (status === 201) {\n            tempNewTweets.unshift(response)\n            setNewTweets(tempNewTweets)\n        } else {\n            console.log(response)\n            alert(\"An error occured please try again\")\n        }\n    }\n    const handleSubmit = (event) => {\n        event.preventDefault()\n        const newVal = textAreaRef.current.value\n        //backend api request\n        apiTweetCreate(newVal, handleBackendUpdate)\n        textAreaRef.current.value = ''\n    }\n    return <div className={props.className}>\n        <div className='col-12 mb-3'>\n            <form onSubmit={handleSubmit}>\n                <textarea\n                    ref={textAreaRef}\n                    required={true}\n                    className='form-control'\n                    name='tweet'></textarea>\n                <button type='submit' className='btn btn-primary my-3'>Tweet</button>\n            </form>\n        </div>\n        <TweetList newTweets={newTweets}/>\n    </div>\n}\n\nexport function TweetList(props) {\n    const [tweetsInit, setTweetsInit] = useState([])\n    const [tweets, setTweets] = useState([])\n    const [tweetsDidSet, setTweetsDidSet] = useState(false)\n    useEffect(() => {\n        const final = [...props.newTweets].concat(tweetsInit)\n        if (final.length !== tweets.length) {\n            setTweets(final)\n        }\n    }, [props.newTweets, tweets, tweetsInit])\n\n    useEffect(() => {\n        if (tweetsDidSet === false) {\n            const handleTweetListLookup = (response, status) => {\n                if (status === 200) {\n                    setTweetsInit(response)\n                    setTweetsDidSet(true)\n                } else {\n                    alert(\"There was an error\")\n                }\n            }\n            apiTweetList(\"\",handleTweetListLookup)\n        }\n    }, [tweetsInit, tweetsDidSet, setTweetsDidSet])\n\n    const handleDidRetweet = (newTweet) => {\n        const updateTweetsInit = [...tweetsInit]\n        updateTweetsInit.unshift(newTweet)\n        setTweetsInit(updateTweetsInit)\n        const updateFinalTweets = [...tweets]\n        updateFinalTweets.unshift(tweets)\n        setTweets(updateFinalTweets)\n    }\n    return tweets.map((item, index) => {\n        return <Tweet\n            tweet={item}\n            didRetweet = {handleDidRetweet}\n            className='my-5 py-5 border bg-white text-dark'\n            key={`${index}-{item.id}`}/>\n    })\n}\n\nexport function ActionBtn(props) {\n    const {tweet, action,didPerformAction} = props\n    const likes = tweet.likes\n            ? tweet.likes\n            : 0\n    const className = props.className\n        ? props.className\n        : 'btn btn-primary btn-sm'\n    const actionDisplay = action.display\n        ? action.display\n        : 'Action'\n\n    const handleActionBackendEvent = (response , status) =>{\n        if((status === 200 || status === 201) && didPerformAction){\n            didPerformAction(response,status)\n        }\n    }\n    const handleClick = (event) => {\n        event.preventDefault()\n        apiTweetAction(tweet.id ,action.type,handleActionBackendEvent )\n        \n    }\n    const display = action.type === 'like'\n        ? `${likes} ${actionDisplay}`\n        : actionDisplay\n    return <button className={className} onClick={handleClick}>{display}</button>\n}\n\nexport function ParentTweet(props){\n        const {tweet} = props\n        return tweet.parent ? <div className = 'row'>\n                <div className = 'col-11 mx-auto p-3 border rounded'>\n                  <p className = 'mb-0 text-muted small'>Retweet</p>\n                  <Tweet hideActions className = {''} tweet = {tweet.parent}/>\n                  </div>\n                  </div> : null\n}\n\nexport function Tweet(props) {\n    const {tweet,didRetweet,hideActions} = props\n    const [actionTweet , setActionTweet] = useState(props.tweet ? props.tweet : null)\n    const className = props.className\n        ? props.className\n        : 'col-10 mx-auto col-md-6'\n    const handlePerformAction = (newActionTweet,status) =>{\n        if(status === 200){\n            setActionTweet(newActionTweet)\n        }else if(status === 201){\n            didRetweet(newActionTweet)  \n        }\n    }\n    \n    return <div className={className}>\n\n        <div>\n        <p>{tweet.id} - {tweet.content}</p>\n              <ParentTweet tweet = {tweet} />\n        </div>\n        {(actionTweet && hideActions !== true) && <div className='btn btn-group'>\n            <ActionBtn\n                tweet={actionTweet} didPerformAction = {handlePerformAction}\n                action={{\n                    type: \"like\",\n                    display: \"Likes\"\n                }}/>\n            <ActionBtn\n                tweet={actionTweet} didPerformAction = {handlePerformAction}\n                action={{\n                    type: \"unlike\",\n                    display: \"Unlike\"\n                }}/>\n            <ActionBtn\n                tweet={actionTweet} didPerformAction = {handlePerformAction}\n                action={{\n                    type: \"retweet\",\n                    display: \"\"\n                }}/>\n        </div>\n}\n    </div>\n}"]},"metadata":{},"sourceType":"module"}