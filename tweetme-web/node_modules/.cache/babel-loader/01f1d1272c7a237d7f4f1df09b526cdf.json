{"ast":null,"code":"var _jsxFileName = \"/home/tb2/youtube/myprojects/tweetme/tweetme-web/src/tweets/components.js\";\nimport React, { useEffect, useState } from 'react';\nimport { loadTweets } from '../lookup';\nexport function TweetComponent(props) {\n  const textAreaRef = React.createRef();\n  const [newTweets, setNewTweets] = useState([]);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const newVal = textAreaRef.current.value;\n    let tempNewTweets = [...newTweets];\n    tempNewTweets.unshift({\n      content: newVal,\n      likes: 0,\n      id: 12313\n    });\n    setNewTweets(tempNewTweets);\n    textAreaRef.current.value = '';\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: props.className,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    ref: textAreaRef,\n    required: true,\n    className: \"form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary my-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, \"Tweet\"))), /*#__PURE__*/React.createElement(TweetList, {\n    newTweets: newTweets,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 1\n    }\n  }));\n}\nexport function TweetList(props) {\n  const [tweetsInit, setTweetsInit] = useState([props.new]);\n  const [tweets, setTweets] = useState([]);\n  useEffect(() => {\n    const final = [...props.newTweets].concat(tweetsInit);\n\n    if (final.length !== tweets.length) {\n      setTweets(final);\n    }\n  }, [props.newTweets, tweets, tweetsInit]);\n  useEffect(() => {\n    const myCallback = (response, status) => {\n      if (status === 200) {\n        setTweetsInit(response);\n      } else {\n        alert(\"There was an error\");\n      }\n    };\n\n    loadTweets(myCallback);\n  }, []);\n  return tweets.map((item, index) => {\n    return /*#__PURE__*/React.createElement(Tweet, {\n      tweet: item,\n      className: \"my-5 py-5 border bg-white text-dark\",\n      key: `${index}-{item.id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 14\n      }\n    });\n  });\n}\nexport function ActionBtn(props) {\n  const {\n    tweet,\n    action\n  } = props;\n  const [likes, setLikes] = useState(tweet.likes === true ? true : false);\n  const [userLike, setUserLike] = useState(false);\n  const className = props.className ? props.className : 'btn btn-primary btn-sm';\n  const actionDisplay = action.display ? action.display : 'Action';\n\n  const handleClick = event => {\n    event.preventDefault();\n\n    if (action.type === 'like') {\n      if (userLike === true) {\n        setLikes(likes - 1);\n        setUserLike(false);\n      } else {\n        setUserLike(true);\n        setLikes(likes + 1);\n      }\n    }\n  };\n\n  const display = action.type === 'like' ? `${likes} ${actionDisplay}` : actionDisplay;\n  return /*#__PURE__*/React.createElement(\"button\", {\n    className: className,\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 10\n    }\n  }, display);\n}\nexport function Tweet(props) {\n  const {\n    tweet\n  } = props;\n  const className = props.className ? props.className : 'col-10 mx-auto col-md-6';\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: className,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }\n  }, tweet.id, \" - \", tweet.content), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn btn-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ActionBtn, {\n    tweet: tweet,\n    action: {\n      type: \"like\",\n      display: \"Likes\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ActionBtn, {\n    tweet: tweet,\n    action: {\n      type: \"unlike\",\n      display: \"Unlike\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ActionBtn, {\n    tweet: tweet,\n    action: {\n      type: \"retweet\",\n      display: \"Retweet\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  })));\n}","map":{"version":3,"sources":["/home/tb2/youtube/myprojects/tweetme/tweetme-web/src/tweets/components.js"],"names":["React","useEffect","useState","loadTweets","TweetComponent","props","textAreaRef","createRef","newTweets","setNewTweets","handleSubmit","event","preventDefault","newVal","current","value","tempNewTweets","unshift","content","likes","id","className","TweetList","tweetsInit","setTweetsInit","new","tweets","setTweets","final","concat","length","myCallback","response","status","alert","map","item","index","ActionBtn","tweet","action","setLikes","userLike","setUserLike","actionDisplay","display","handleClick","type","Tweet"],"mappings":"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","sourcesContent":["import React , {useEffect,useState} from 'react'\n\nimport {loadTweets} from '../lookup'\n\nexport function TweetComponent(props){\n  const textAreaRef = React.createRef()\n  const [newTweets , setNewTweets] = useState([])\n  const handleSubmit = (event) =>{\n    event.preventDefault()\n    const newVal = textAreaRef.current.value\n    let tempNewTweets = [...newTweets]\n    tempNewTweets.unshift({\n      content : newVal,\n      likes : 0,\n      id : 12313\n    })\n    setNewTweets(tempNewTweets)\n    textAreaRef.current.value = ''\n  }\n  return <div className = {props.className}>\n    <div className = 'col-12 mb-3'>\n  <form onSubmit={handleSubmit}>\n    <textarea ref = {textAreaRef} required = {true} className='form-control'></textarea>\n    <button type='submit' className='btn btn-primary my-3'>Tweet</button>\n</form>\n</div>\n<TweetList newTweets = {newTweets}/>\n   </div>\n}\n\nexport function TweetList(props){\n  const [tweetsInit,setTweetsInit] = useState([props.new])\n  const [tweets , setTweets] = useState([])\n  useEffect(() =>{\n    const final = [...props.newTweets].concat(tweetsInit)\n    if(final.length !== tweets.length) {\n         setTweets(final)\n    }\n  },[props.newTweets , tweets , tweetsInit])\n  useEffect(() => {\n    const myCallback = (response,status) => {\n      if(status === 200){\n        setTweetsInit(response)\n      }\n      else{\n        alert(\"There was an error\")\n      }\n    }\n    loadTweets(myCallback)\n  },[])\n  return tweets.map((item,index) => {\n      return <Tweet tweet = {item} className = 'my-5 py-5 border bg-white text-dark' key = {`${index}-{item.id}`}/>\n    })\n}\n\n\nexport function ActionBtn(props){\n  const {tweet,action} = props\n  const [likes,setLikes] = useState(tweet.likes === true ? true : false)\n  const [userLike , setUserLike] = useState(false)\n  const className = props.className ? props.className : 'btn btn-primary btn-sm'\n  const actionDisplay = action.display ? action.display : 'Action'\n  const handleClick = (event) =>{\n      event.preventDefault()\n      if(action.type === 'like'){\n          if(userLike === true){\n              setLikes(likes-1)\n              setUserLike(false)\n          }\n          else{\n              setUserLike(true)\n              setLikes(likes+1)\n          }\n      }\n  }\n  const display = action.type === 'like' ? `${likes} ${actionDisplay}` : actionDisplay\n  return <button className = {className} onClick = {handleClick}>{display}</button>\n}\n\nexport function Tweet(props) {\n  const {tweet} = props\n  const className = props.className ? props.className : 'col-10 mx-auto col-md-6'\n  return <div className = {className}>\n    <p>{tweet.id} - {tweet.content}</p>\n    <div className = 'btn btn-group'>\n      <ActionBtn tweet = {tweet} action = {{type : \"like\" , display : \"Likes\"}} />\n      <ActionBtn tweet = {tweet} action = {{type : \"unlike\" , display : \"Unlike\"}} />\n      <ActionBtn tweet = {tweet} action = {{type : \"retweet\" , display : \"Retweet\"}} />\n\n    </div>\n  </div>\n}"]},"metadata":{},"sourceType":"module"}