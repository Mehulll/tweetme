{"ast":null,"code":"var _jsxFileName = \"/home/tb2/youtube/myprojects/tweetme/tweetme-web/src/tweets/detail.js\";\nimport React, { useState } from 'react';\nimport { ActionBtn } from './buttons';\nimport { UserDisplay, UserPicture } from '../profiles';\nexport function ParentTweet(props) {\n  const {\n    tweet\n  } = props;\n  return tweet.parent ? /*#__PURE__*/React.createElement(Tweet, {\n    isRetweet: true,\n    retweeter: props.retweeter,\n    hideActions: true,\n    className: ' ',\n    tweet: tweet.parent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 27\n    }\n  }) : null;\n}\nexport function Tweet(props) {\n  const {\n    tweet,\n    didRetweet,\n    hideActions,\n    isRetweet,\n    retweeter\n  } = props;\n  const [actionTweet, setActionTweet] = useState(props.tweet ? props.tweet : null);\n  let className = props.className ? props.className : 'col-10 mx-auto col-md-6';\n  className = isRetweet === true ? `${className} p-2 border rounded` : className;\n  const path = window.location.pathname;\n  const match = path.match(/(?<tweetid>\\d+)/);\n  const urlTweetId = match ? match.groups.tweetid : -1;\n  const isDetail = `${tweet.id}` === `${urlTweetId}`;\n\n  const handleLink = event => {\n    event.preventDefault();\n    window.location.href = `/${tweet.id}`;\n  };\n\n  const handlePerformAction = (newActionTweet, status) => {\n    if (status === 200) {\n      setActionTweet(newActionTweet);\n    } else if (status === 201) {\n      didRetweet(newActionTweet);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: className,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 12\n    }\n  }, isRetweet === true && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 32\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"small text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, \"Retweet via \", /*#__PURE__*/React.createElement(UserDisplay, {\n    user: retweeter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 56\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(UserPicture, {\n    user: tweet.user,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-11\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(UserDisplay, {\n    includeFullName: true,\n    user: tweet.user,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(ParentTweet, {\n    tweet: tweet,\n    retweeter: tweet.user,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn btn-group px-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 8\n    }\n  }, actionTweet && hideActions !== true && /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 54\n    }\n  }, /*#__PURE__*/React.createElement(ActionBtn, {\n    tweet: actionTweet,\n    didPerformAction: handlePerformAction,\n    action: {\n      type: \"like\",\n      display: \"Likes\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(ActionBtn, {\n    tweet: actionTweet,\n    didPerformAction: handlePerformAction,\n    action: {\n      type: \"unlike\",\n      display: \"Unlike\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(ActionBtn, {\n    tweet: actionTweet,\n    didPerformAction: handlePerformAction,\n    action: {\n      type: \"retweet\",\n      display: \"\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  })), isDetail === true ? null : /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-outline-primary btn-sm\",\n    onClick: handleLink,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 40\n    }\n  }, \"View\"))));\n}","map":{"version":3,"sources":["/home/tb2/youtube/myprojects/tweetme/tweetme-web/src/tweets/detail.js"],"names":["React","useState","ActionBtn","UserDisplay","UserPicture","ParentTweet","props","tweet","parent","retweeter","Tweet","didRetweet","hideActions","isRetweet","actionTweet","setActionTweet","className","path","window","location","pathname","match","urlTweetId","groups","tweetid","isDetail","id","handleLink","event","preventDefault","href","handlePerformAction","newActionTweet","status","user","type","display"],"mappings":"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","sourcesContent":["import React, { useState} from 'react'\n\nimport {ActionBtn} from './buttons'\nimport {\n  UserDisplay,\n  UserPicture\n} from '../profiles'\n\nexport function ParentTweet(props){\n    const {tweet} = props\n    return tweet.parent ? <Tweet isRetweet retweeter={props.retweeter} hideActions className={' '} tweet={tweet.parent} /> : null    \n}\n\nexport function Tweet(props) {\n    const {tweet,didRetweet,hideActions , isRetweet , retweeter} = props\n    const [actionTweet , setActionTweet] = useState(props.tweet ? props.tweet : null)\n    let className = props.className\n        ? props.className\n        : 'col-10 mx-auto col-md-6'\n    className = isRetweet === true ? `${className} p-2 border rounded` : className\n    const path = window.location.pathname\n    const match = path.match(/(?<tweetid>\\d+)/)\n    const urlTweetId = match ? match.groups.tweetid : -1\n    const isDetail = `${tweet.id}` === `${urlTweetId}` \n    const handleLink = (event) =>{\n        event.preventDefault()\n        window.location.href = `/${tweet.id}`\n    }\n    const handlePerformAction = (newActionTweet,status) =>{\n        if(status === 200){\n            setActionTweet(newActionTweet)\n        }else if(status === 201){\n            didRetweet(newActionTweet)  \n        }\n    }\n    \n    return <div className={className}>\n        {isRetweet === true && <div className='mb-2'>\n        <span className='small text-muted'>Retweet via <UserDisplay user={retweeter} /></span>\n        </div>}\n        <div className='d-flex'>\n        <UserPicture user={tweet.user} />\n        <div className=''>\n\n          </div>\n          <div className='col-11'></div>\n\n        <div>\n            <p>\n                <UserDisplay includeFullName user={tweet.user} />\n            </p>\n            <ParentTweet tweet={tweet} retweeter={tweet.user} />\n        </div>\n       <div className='btn btn-group px-0'>\n           {(actionTweet && hideActions !== true) && <React.Fragment>\n            <ActionBtn\n                tweet={actionTweet} didPerformAction = {handlePerformAction}\n                action={{\n                    type: \"like\",\n                    display: \"Likes\"\n                }}/>\n            <ActionBtn\n                tweet={actionTweet} didPerformAction = {handlePerformAction}\n                action={{\n                    type: \"unlike\",\n                    display: \"Unlike\"\n                }}/>\n            <ActionBtn\n                tweet={actionTweet} didPerformAction = {handlePerformAction}\n                action={{\n                    type: \"retweet\",\n                    display: \"\"\n                }}/>\n            </React.Fragment>\n}\n            {isDetail === true ? null :<button className = 'btn btn-outline-primary btn-sm' onClick = {handleLink}>View</button> }\n        </div>\n      </div>\n    </div>\n}"]},"metadata":{},"sourceType":"module"}