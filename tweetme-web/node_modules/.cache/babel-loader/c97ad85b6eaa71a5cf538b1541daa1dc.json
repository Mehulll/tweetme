{"ast":null,"code":"var _jsxFileName = \"/home/tb2/youtube/myprojects/tweetme/tweetme-web/src/tweets/components.js\";\nimport React, { useEffect, useState } from 'react';\nimport { TweetList } from './list';\nimport { TweetCreate } from './create';\nimport { apiTweetDetail } from './lookup';\nimport { Tweet } from './detail';\nexport function TweetComponent(props) {\n  const [newTweets, setNewTweets] = useState([]);\n  const canTweet = props.canTweet === \"false\" ? false : true;\n\n  const handleNewTweet = newTweet => {\n    let tempNewTweets = [...newTweets];\n    tempNewTweets.unshift(newTweets);\n    setNewTweets(tempNewTweets);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: props.className,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 12\n    }\n  }, canTweet === true && /*#__PURE__*/React.createElement(TweetCreate, {\n    didTweet: handleNewTweet,\n    className: \"col-12 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 31\n    }\n  }), /*#__PURE__*/React.createElement(TweetList, Object.assign({\n    newTweets: newTweets\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  })));\n}\nexport function TweetDetailComponent(props) {\n  const {\n    tweetId\n  } = props;\n  const [didLookup, setDidLookup] = useState(false);\n  const [tweet, setTweet] = useState(null);\n\n  const handleBackendLookup = (response, status) => {\n    if (status === 200) {\n      setTweet(response);\n    } else {}\n  };\n\n  useEffect(() => {\n    if (didLookup === false) {\n      apiTweetDetail(tweetId);\n      setDidLookup(true);\n    }\n  }, [tweetId, didLookup, setDidLookup]);\n  return;\n}","map":{"version":3,"sources":["/home/tb2/youtube/myprojects/tweetme/tweetme-web/src/tweets/components.js"],"names":["React","useEffect","useState","TweetList","TweetCreate","apiTweetDetail","Tweet","TweetComponent","props","newTweets","setNewTweets","canTweet","handleNewTweet","newTweet","tempNewTweets","unshift","className","TweetDetailComponent","tweetId","didLookup","setDidLookup","tweet","setTweet","handleBackendLookup","response","status"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA4BC,QAA5B,QAA2C,OAA3C;AACA,SAAQC,SAAR,QAAwB,QAAxB;AACA,SAAQC,WAAR,QAA0B,UAA1B;AACA,SAAQC,cAAR,QAA6B,UAA7B;AACA,SAAQC,KAAR,QAAoB,UAApB;AAGA,OAAO,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAClC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAMS,QAAQ,GAAGH,KAAK,CAACG,QAAN,KAAmB,OAAnB,GAA6B,KAA7B,GAAqC,IAAtD;;AACA,QAAMC,cAAc,GAAIC,QAAD,IAAc;AACjC,QAAIC,aAAa,GAAG,CAAC,GAAGL,SAAJ,CAApB;AACAK,IAAAA,aAAa,CAACC,OAAd,CAAsBN,SAAtB;AACAC,IAAAA,YAAY,CAACI,aAAD,CAAZ;AACH,GAJD;;AAKA,sBAAO;AAAK,IAAA,SAAS,EAAEN,KAAK,CAACQ,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACFL,QAAQ,KAAK,IAAb,iBAAqB,oBAAC,WAAD;AAAa,IAAA,QAAQ,EAAIC,cAAzB;AAAyC,IAAA,SAAS,EAAC,aAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADnB,eAEH,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAEH;AAAtB,KAAqCD,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFG,CAAP;AAIH;AAED,OAAO,SAASS,oBAAT,CAA8BT,KAA9B,EAAoC;AACvC,QAAM;AAACU,IAAAA;AAAD,MAAYV,KAAlB;AACA,QAAM,CAACW,SAAD,EAAaC,YAAb,IAA6BlB,QAAQ,CAAC,KAAD,CAA3C;AACA,QAAM,CAACmB,KAAD,EAAOC,QAAP,IAAmBpB,QAAQ,CAAC,IAAD,CAAjC;;AAEA,QAAMqB,mBAAmB,GAAG,CAACC,QAAD,EAAYC,MAAZ,KAAsB;AAC9C,QAAGA,MAAM,KAAK,GAAd,EAAkB;AACdH,MAAAA,QAAQ,CAACE,QAAD,CAAR;AACH,KAFD,MAEK,CAEJ;AACJ,GAND;;AAOAvB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGkB,SAAS,KAAK,KAAjB,EAAuB;AACnBd,MAAAA,cAAc,CAACa,OAAD,CAAd;AACAE,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACH;AACJ,GALQ,EAKL,CAACF,OAAD,EAAUC,SAAV,EAAsBC,YAAtB,CALK,CAAT;AAMA;AACH","sourcesContent":["import React , {useEffect , useState} from 'react'\nimport {TweetList} from './list'\nimport {TweetCreate} from './create'\nimport {apiTweetDetail} from './lookup'\nimport {Tweet} from './detail'\n\n\nexport function TweetComponent(props) {\n    const [newTweets, setNewTweets] = useState([])\n    const canTweet = props.canTweet === \"false\" ? false : true\n    const handleNewTweet = (newTweet) => {\n        let tempNewTweets = [...newTweets]\n        tempNewTweets.unshift(newTweets)\n        setNewTweets(tempNewTweets)\n    }\n    return <div className={props.className}>\n        {canTweet === true && <TweetCreate didTweet = {handleNewTweet} className='col-12 mb-3'/>}\n        <TweetList newTweets={newTweets} {...props}/>\n    </div>\n}\n\nexport function TweetDetailComponent(props){\n    const {tweetId} = props\n    const [didLookup , setDidLookup] = useState(false)\n    const [tweet,setTweet] = useState(null)\n    \n    const handleBackendLookup = (response , status) =>{\n        if(status === 200){\n            setTweet(response)\n        }else{\n            \n        }\n    } \n    useEffect(() => {\n        if(didLookup === false){\n            apiTweetDetail(tweetId,)\n            setDidLookup(true)\n        }\n    } , [tweetId ,didLookup , setDidLookup])\n    return \n} "]},"metadata":{},"sourceType":"module"}